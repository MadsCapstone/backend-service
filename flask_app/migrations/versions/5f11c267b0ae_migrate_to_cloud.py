"""migrate to cloud

Revision ID: 5f11c267b0ae
Revises: 
Create Date: 2021-08-13 22:34:57.711902

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f11c267b0ae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('impact_rel',
    sa.Column('impacter_id', sa.Integer(), nullable=False),
    sa.Column('impacted_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('impacter_id', 'impacted_id')
    )
    op.create_table('invasive_species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=100), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('public_id', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('species',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('test_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('data', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('token_blacklist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('waterbody',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('waterbody_edges',
    sa.Column('nodei_id', sa.Integer(), nullable=False),
    sa.Column('nodef_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('nodei_id', 'nodef_id')
    )
    op.create_table('waterbody_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('type', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('impact_rel_dist',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('impacter_id', sa.Integer(), nullable=True),
    sa.Column('impacted_id', sa.Integer(), nullable=True),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['impacted_id'], ['species.id'], ),
    sa.ForeignKeyConstraint(['impacter_id'], ['species.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('species_observed',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('species_id', sa.Integer(), nullable=True),
    sa.Column('waterbody_id', sa.Integer(), nullable=True),
    sa.Column('waterbody_name', sa.String(length=255), nullable=True),
    sa.Column('distance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    sa.ForeignKeyConstraint(['waterbody_id'], ['waterbody.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('waterbody_geojson',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('geojson', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['species_observed.waterbody_id'], ),
    sa.ForeignKeyConstraint(['id'], ['waterbody.id'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('waterbody_geojson')
    op.drop_table('species_observed')
    op.drop_table('impact_rel_dist')
    op.drop_table('waterbody_metadata')
    op.drop_table('waterbody_edges')
    op.drop_table('waterbody')
    op.drop_table('token_blacklist')
    op.drop_table('test_data')
    op.drop_table('species')
    op.drop_table('site_user')
    op.drop_table('invasive_species')
    op.drop_table('impact_rel')
    # ### end Alembic commands ###
